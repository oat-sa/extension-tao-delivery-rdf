define("taoDeliveryRdf/controller/routes",[],function(){"use strict";return{DeliveryMgmt:{actions:{editDelivery:"controller/DeliveryMgmt/editDelivery",excludeTesttaker:"controller/DeliveryMgmt/testtaker",wizard:"controller/DeliveryMgmt/wizard"}}}}),define("taoDeliveryRdf/controller/DeliveryMgmt/editDelivery",["jquery","helpers","ui/modal"],function($,helpers){"use strict";return{start:function(){$("#exclude-btn").click(function(){var delivery=$(this).data("delivery");$("#testtaker-form").load(helpers._url("excludeTesttaker","DeliveryMgmt","taoDeliveryRdf",{uri:delivery}),function(){$("body").prepend($("#modal-container")),$("#testtaker-form").modal()})})}}
}),define("taoDeliveryRdf/controller/DeliveryMgmt/testtaker",["jquery","i18n","helpers","module","layout/section","ui/feedback"],function($,__,helpers,module,section,feedback){"use strict";function switchList(){var target,current=$(this).parent().attr("id");"excludedList"==current?target=$("#assignedList"):"assignedList"==current&&(target=$("#excludedList")),void 0!==target&&(target.append(this),this.scrollIntoView())}var timeout,$search=$("#tt-filter"),$list=$("#assignedList"),liveSearch=function(){var pattern=$search.val();clearTimeout(timeout),timeout=setTimeout(function(){filterList(new RegExp(pattern),$list)},300)},filterList=function(regex,list){
list.children().each(function(index,element){null===$(element).text().match(regex)?$(element).hide():$(element).show()})};return{start:function(){$("#save-tt").click(function(){var excluded=[];$("#excludedList > li").each(function(index){excluded.push($(this).data("uri"))});var assemblyUri=$('input[name="assemblyUri"]').val();$.ajax({url:helpers._url("saveExcluded","DeliveryMgmt","taoDeliveryRdf"),type:"POST",data:{uri:assemblyUri,excluded:JSON.stringify(excluded)},dataType:"json",success:function(response){response.saved&&(feedback().success(__("Selection saved successfully")),
section.loadContentBlock(helpers._url("editDelivery","DeliveryMgmt","taoDeliveryRdf"),{uri:assemblyUri}))}})}),$("#assignedList > li").click(switchList),$("#excludedList > li").click(switchList),$("#close-tt").click(function(){$("#testtaker-form").modal("close")}),$search.keyup(liveSearch).siblings(".ctrl").click(liveSearch)}}}),define("taoDeliveryRdf/controller/DeliveryMgmt/wizard",["jquery","i18n","ui/filter","ui/feedback","util/url","core/promise"],function($,__,filterFactory,feedback,urlUtils,Promise){"use strict";var provider={list:function(data){return new Promise(function(resolve,reject){$.ajax({
url:urlUtils.route("getAvailableTests","DeliveryMgmt","taoDeliveryRdf"),data:{q:data.q,page:data.page},type:"GET",dataType:"JSON"}).done(function(tests){tests?resolve(tests):reject(new Error(__("Unable to load tests")))}).fail(function(){reject(new Error(__("Unable to load tests")))})})}};return{start:function(){var $filterContainer=$(".test-select-container"),$formElement=$("#test");filterFactory($filterContainer,{placeholder:__("Select the test you want to publish to the test-takers"),width:"64%",quietMillis:1e3,label:__("Select the test")}).on("change",function(test){$formElement.val(test)}).on("request",function(params){
provider.list(params.data).then(function(tests){params.success(tests)}).catch(function(err){params.error(err),feedback().error(err)})}).render("<%= text %>")}}});
//# sourceMappingURL=controllers.min.js.map