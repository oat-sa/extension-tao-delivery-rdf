define("taoDeliveryRdf/controller/routes",[],function(){"use strict";return{DeliveryMgmt:{actions:{editDelivery:"controller/DeliveryMgmt/editDelivery",excludeTesttaker:"controller/DeliveryMgmt/testtaker",wizard:"controller/DeliveryMgmt/wizard"}},Publish:{actions:{index:"controller/Publish/index"}}}}),define("taoDeliveryRdf/controller/DeliveryMgmt/editDelivery",["jquery","helpers","ui/modal"],function($,helpers){"use strict";return{start:function(){$("#exclude-btn").click(function(){var delivery=$(this).data("delivery");$("#testtaker-form").load(helpers._url("excludeTesttaker","DeliveryMgmt","taoDeliveryRdf",{uri:delivery}),function(){$("body").prepend($("#modal-container")),
$("#testtaker-form").modal()})})}}}),define("taoDeliveryRdf/controller/DeliveryMgmt/testtaker",["jquery","i18n","helpers","module","layout/section","ui/feedback"],function($,__,helpers,module,section,feedback){"use strict";function switchList(){var target,current=$(this).parent().attr("id");"excludedList"==current?target=$("#assignedList"):"assignedList"==current&&(target=$("#excludedList")),"undefined"!=typeof target&&(target.append(this),this.scrollIntoView())}var timeout,$search=$("#tt-filter"),$list=$("#assignedList"),liveSearch=function(){var pattern=$search.val();clearTimeout(timeout),timeout=setTimeout(function(){filterList(new RegExp(pattern),$list)},300);
},filterList=function(regex,list){list.children().each(function(index,element){null===$(element).text().match(regex)?$(element).hide():$(element).show()})};return{start:function(){$("#save-tt").click(function(){var excluded=[];$("#excludedList > li").each(function(index){excluded.push($(this).data("uri"))});var assemblyUri=$('input[name="assemblyUri"]').val();$.ajax({url:helpers._url("saveExcluded","DeliveryMgmt","taoDeliveryRdf"),type:"POST",data:{uri:assemblyUri,excluded:JSON.stringify(excluded)},dataType:"json",success:function(response){response.saved&&(feedback().success(__("Selection saved successfully")),section.loadContentBlock(helpers._url("editDelivery","DeliveryMgmt","taoDeliveryRdf"),{
uri:assemblyUri}))}})}),$("#assignedList > li").click(switchList),$("#excludedList > li").click(switchList),$("#close-tt").click(function(){$("#testtaker-form").modal("close")}),$search.keyup(liveSearch).siblings(".ctrl").click(liveSearch)}}}),define("taoDeliveryRdf/controller/DeliveryMgmt/wizard",["lodash","jquery","i18n","ui/filter","ui/feedback","util/url","layout/actions","core/promise","core/taskQueue/taskQueue","ui/taskQueueButton/standardButton"],function(_,$,__,filterFactory,feedback,urlUtils,actionManager,Promise,taskQueue,taskCreationButtonFactory){"use strict";var provider={list:function(data){return new Promise(function(resolve,reject){$.ajax({url:urlUtils.route("getAvailableTests","DeliveryMgmt","taoDeliveryRdf"),
data:{q:data.q,page:data.page},type:"GET",dataType:"JSON"}).done(function(tests){tests?resolve(tests):reject(new Error(__("Unable to load tests")))}).fail(function(){reject(new Error(__("Unable to load tests")))})})}},refreshTree=function(uriResource){actionManager.trigger("refresh",{uri:uriResource})};return{start:function(){var taskCreationButton,$oldSubmitter,$filterContainer=$(".test-select-container"),$formElement=$("#test"),$form=$("#simpleWizard"),$container=$form.closest(".content-block");filterFactory($filterContainer,{placeholder:__("Select the test you want to publish to the test-takers"),width:"64%",quietMillis:1e3,label:__("Select the test")}).on("change",function(test){
$formElement.val(test),test?taskCreationButton.enable():taskCreationButton.disable()}).on("request",function(params){provider.list(params.data).then(function(tests){params.success(tests)}).catch(function(err){params.error(err),feedback().error(err)})}).render("<%= text %>"),$oldSubmitter=$form.find(".form-submitter"),taskCreationButton=taskCreationButtonFactory({type:"info",icon:"delivery",title:__("Publish the test"),label:__("Publish"),taskQueue:taskQueue,taskCreationUrl:$form.prop("action"),taskCreationData:function(){return $form.serializeArray()},taskReportContainer:$container}).on("finished",function(result){result.task&&result.task.report&&_.isArray(result.task.report.children)&&result.task.report.children.length&&result.task.report.children[0]&&(result.task.report.children[0].data&&result.task.report.children[0].data.uriResource?(feedback().info(__("%s completed",result.task.taskLabel)),
refreshTree(result.task.report.children[0].data.uriResource)):this.displayReport(result.task.report.children[0],__("Error")))}).on("continue",function(){refreshTree()}).on("error",function(err){feedback().error(err)}).render($oldSubmitter.closest(".form-toolbar")).disable(),$oldSubmitter.replaceWith(taskCreationButton.getElement().css({float:"right"}))}}}),define("taoDeliveryRdf/controller/Publish/index",["jquery","lodash","i18n","util/url","layout/actions","provider/resources","ui/destination/selector","ui/feedback","core/taskQueue/taskQueue"],function($,_,__,urlHelper,actionManager,resourceProviderFactory,destinationSelectorFactory,feedback,taskQueue){"use strict";
var refreshTree=function(uriResource){actionManager.trigger("refresh",{uri:uriResource})};return{start:function(){var $container=$(".selector-container"),testUri=$container.data("test"),testLabel=$container.data("label"),resourceProvider=resourceProviderFactory();destinationSelectorFactory($container,{title:__('Publish "%s" to',testLabel),actionName:__("Publish"),icon:"delivery",taskQueue:taskQueue,taskCreationData:{testUri:testUri},taskCreationUrl:urlHelper.route("publish","Publish","taoDeliveryRdf"),classUri:$container.data("root-class")}).on("query",function(params){var self=this;params.classOnly=!0,resourceProvider.getResources(params,!0).then(function(resources){
self.update(resources,params)}).catch(function(err){self.trigger("error",err)})}).on("finished",function(result,button){result.task&&result.task.report&&_.isArray(result.task.report.children)&&result.task.report.children.length&&result.task.report.children[0]&&(result.task.report.children[0].data&&result.task.report.children[0].data.uriResource?(feedback().info(__("%s completed",result.task.taskLabel)),refreshTree(result.task.report.children[0].data.uriResource)):button.displayReport(result.task.report.children[0],__("Error")))}).on("continue",function(){refreshTree(testUri)}).on("error",function(err){feedback().error(err)})}}});
//# sourceMappingURL=controllers.min.js.map